import React, { useState } from 'react';
   import { useDispatch } from 'react-redux';
   import { setUser } from '../slices/userSlice';
   import { gql, useMutation } from '@apollo/client';

   const LOGIN_MUTATION = gql`
       mutation Login($username: String!, $password: String!) {
           login(username: $username, password: $password) {
               token
               user {
                   id
                   username
               }
           }
       }
   `;

   const Login: React.FC = () => {
       const dispatch = useDispatch();
       const [username, setUsername] = useState('');
       const [password, setPassword] = useState('');

       const [login] = useMutation(LOGIN_MUTATION, {
           onCompleted: (data) => {
               const { token, user } = data.login;
               dispatch(setUser({ id: user.id, username: user.username, token }));
           },
           onError: (error) => {
               console.error('Error logging in:', error);
           },
       });

       const handleSubmit = (e: React.FormEvent) => {
           e.preventDefault();
           login({ variables: { username, password } });
       };

       return (
           <form onSubmit={handleSubmit}>
               <input
                   type="text"
                   value={username}
                   onChange={(e) => setUsername(e.target.value)}
                   placeholder="Username"
                   required
               />
               <input
                   type="password"
                   value={password}
                   onChange={(e) => setPassword(e.target.value)}
                   placeholder="Password"
                   required
               />
               <button type="submit">Login</button>
           </form>
       );
   };

   export default Login;
